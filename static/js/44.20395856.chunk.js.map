{"version":3,"sources":["views/pages/login/pustikom.png","views/pages/login/Login.js"],"names":["withRouter","initialValues","email","password","onSubmit","values","setSubmitting","setTimeout","console","log","validationSchema","Yup","shape","required","min","matches","props","touched","errors","isSubmitting","handleChange","handleBlur","handleSubmit","className","style","backgroundColor","color","md","borderColor","htmlFor","name","type","placeholder","value","onChange","onBlur","href","disabled"],"mappings":"iMAAe,I,gBC0IAA,uBAxGD,kBAGd,cAAC,IAAD,CACAC,cAAe,CAAEC,MAAO,GAAIC,SAAU,IACtCC,SAAU,SAACC,EAAD,GAAgC,IAArBC,EAAoB,EAApBA,cACnBC,YAAW,WACTC,QAAQC,IAAI,aAAcJ,GAC1BC,GAAc,KACb,MAKLI,iBAAkBC,MAAaC,MAAM,CACnCV,MAAOS,MACJT,MAAM,+BACNW,SAAS,cACZV,SAAUQ,MACPE,SAAS,uCACTC,IAAI,EAAG,8CACPC,QAAQ,cAAe,gCAlB5B,SAqBC,SAAAC,GAAU,IAEPX,EAOEW,EAPFX,OACAY,EAMED,EANFC,QACAC,EAKEF,EALFE,OACAC,EAIEH,EAJFG,aACAC,EAGEJ,EAHFI,aACAC,EAEEL,EAFFK,WACAC,EACEN,EADFM,aAEF,OAEE,mCAEA,qBAAKC,UAAU,qDAAqDC,MAAO,CAAEC,gBAAiB,aAA9F,SACA,eAAC,IAAD,WACA,sBAAKF,UAAU,iBAAf,UAEQ,iCAAQ,qBAAIC,MAAO,CAAEE,MAAO,WAApB,cAAkC,gEAChD,iCAAQ,qBAAIF,MAAO,CAAEE,MAAO,WAApB,cAAkC,yDAG5C,cAAC,KAAD,CAAMH,UAAU,yBAAhB,SACM,cAAC,IAAD,CAAMI,GAAG,IAAT,SACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOJ,UAAU,MAAMC,MAAO,CAAEC,gBAAiB,UAAWG,YAAY,WAAxE,SACE,cAAC,IAAD,UACZ,eAAC,IAAD,CAAOxB,SAAUkB,EAAjB,UACA,iCAAQ,6BAAI,uDACZ,uBAEE,wBAAOO,QAAQ,QAAf,cAAwB,8CACxB,uBACEC,KAAK,QACLC,KAAK,OACLC,YAAY,mBACZC,MAAO5B,EAAOH,MACdgC,SAAUd,EACVe,OAAQd,EACRE,UAAWL,EAAOhB,OAASe,EAAQf,OAAS,UAE7CgB,EAAOhB,OAASe,EAAQf,OACvB,qBAAKqB,UAAU,iBAAf,SAAiCL,EAAOhB,QAE1C,uBAAO2B,QAAQ,QAAf,SAAuB,gDACvB,uBACEC,KAAK,WACLC,KAAK,WACLC,YAAY,sBACZC,MAAO5B,EAAOF,SACd+B,SAAUd,EACVe,OAAQd,EACRE,UAAWL,EAAOf,UAAYc,EAAQd,UAAY,UAEnDe,EAAOf,UAAYc,EAAQd,UAC1B,qBAAKoB,UAAU,iBAAf,SAAiCL,EAAOf,WAE1C,wBAAQ4B,KAAK,SAASR,UAAU,oDAAoDa,KAAK,aAAaC,SAAUlB,EAAhH","file":"static/js/44.20395856.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/pustikom.719b7e49.png\";","import React, { useState, useEffect } from 'react';\nimport validation from \"./validation\";\nimport \"./Loggedin.css\";\nimport { useHistory } from \"react-router-dom\";\n\n\n// import Form from \"./Form\";\nimport { withRouter } from 'react-router'\nimport swal from '@sweetalert/with-react';\nimport { Formik } from \"formik\";\nimport * as EmailValidator from \"email-validator\"; // used when validating with a self-implemented approach\nimport * as Yup from \"yup\"; // used when validating with a pre-built solution\n// import { Link } from 'react-router-dom'\nimport bg from './pustikom.png';\n\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardGroup,\n  CCol,\n  CContainer,\n  CForm,\n  CInput,\n  CInputGroup,\n  CInputGroupPrepend,\n  CInputGroupText,\n  CRow,\n  CLink\n} from '@coreui/react'\n\n\n\n\nconst Login = () => (\n  \n\n<Formik\ninitialValues={{ email: \"\", password: \"\" }}\nonSubmit={(values, { setSubmitting }) => {\n  setTimeout(() => {\n    console.log(\"Logging in\", values);\n    setSubmitting(false);\n  }, 500,);\n  // const  history  = () => useHistory;\n  // history.push('/dashboard');\n}}\n\nvalidationSchema={Yup.object().shape({\n  email: Yup.string()\n    .email(\"Masukkan dalam bentuk email\")\n    .required(\"Dibutuhkan\"),\n  password: Yup.string()\n    .required(\"Tidak ada Password yang dimasukkan.\")\n    .min(6, \"Password terlalu Pendek - minimal 6 huruf.\")\n    .matches(/(?=.*[0-7])/, \"Password harus ada  nomer.\")\n})}\n>\n{props => {\n  const {\n    values,\n    touched,\n    errors,\n    isSubmitting,\n    handleChange,\n    handleBlur,\n    handleSubmit\n  } = props;\n  return (\n    \n    <>\n  \n    <div className=\"c-app c-default-layout flex-row align-items-center\" style={{ backgroundColor: \"\t#393939\" }}>\n    <CContainer >\n    <div className=\"shoe-container\">\n            {/* <img src={bg} alt=\"\" width=\"350\"/> */}\n            <center><h3 style={{ color: '#478fca' }}> <strong>Sistem Manajemen Aset</strong></h3></center>\n      <center><h3 style={{ color: '#dd5a43' }}> <strong>UPT TIK UNJ</strong></h3></center>\n        </div>\n   \n    <CRow className=\"justify-content-center\"> \n          <CCol md=\"5\"> \n            <CCardGroup> \n              <CCard className=\"p-2\" style={{ backgroundColor: \"#e4e6e9\", borderColor:\"#000000\"}}>\n                <CCardBody> \n    <CForm onSubmit={handleSubmit}>\n    <center><h4><strong>Halaman Login</strong></h4></center>  \n    <hr></hr>\n  \n      <label htmlFor=\"email\"> <strong>Email</strong></label>\n      <input\n        name=\"email\"\n        type=\"text\"\n        placeholder=\"Enter your email\"\n        value={values.email}\n        onChange={handleChange}\n        onBlur={handleBlur}\n        className={errors.email && touched.email && \"error\"}\n      />\n      {errors.email && touched.email && (\n        <div className=\"input-feedback\">{errors.email}</div>\n      )}\n      <label htmlFor=\"email\"><strong>Password</strong></label>\n      <input\n        name=\"password\"\n        type=\"password\"\n        placeholder=\"Enter your password\"\n        value={values.password}\n        onChange={handleChange}\n        onBlur={handleBlur}\n        className={errors.password && touched.password && \"error\"}\n      />\n      {errors.password && touched.password && (\n        <div className=\"input-feedback\">{errors.password}</div>\n      )}\n      <button type=\"submit\" className=\"c-subheader-nav-link btn btn-ghost-primary active\" href=\"/dashboard\" disabled={isSubmitting}>\n        Login\n      </button>\n      \n    </CForm>\n  \n    </CCardBody>\n    </CCard>\n    </CCardGroup>\n    </CCol>\n    </CRow>\n    \n    </CContainer>\n    </div>\n    </>\n  );\n}}\n\n</Formik>\n\n);\n\n\nexport default withRouter (Login);"],"sourceRoot":""}